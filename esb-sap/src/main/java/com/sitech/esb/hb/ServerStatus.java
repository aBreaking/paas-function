package com.sitech.esb.hb;





import java.util.Date;

/**
 * ServerStatus generated by hbm2java
 */
public class ServerStatus implements java.io.Serializable {

	private static final long serialVersionUID = -4621719339310029417L;
	private String id;
	private String ip;
	private int port;
	private String serverName;
	private Integer executeThreadBusyCount;
	private Integer hoggingThreadCount;
	private Integer executeThreadIdleCount;
	private Integer executeThreadTotalCount;
	private Integer standbyThreadCount;
	private Integer pendingUserRequestCount;
	private Integer completedRequestCount;
	private String throughput;
	private String healthStatus;
	private Date time;
	private String times;
	
	
	public String getTimes() {
		return times;
	}
	
	public void setTimes(String times) {
		this.times = times;
	}
	public ServerStatus() {
	}

	public ServerStatus(String id, String ip, int port, String serverName,
			Date time,String times) {
		this.id = id;
		this.ip = ip;
		this.port = port;
		this.serverName = serverName;
		this.time = time;
		this.times=times;
	}

	public ServerStatus(String id, String ip, int port, String serverName,
			Integer executeThreadBusyCount, Integer hoggingThreadCount,Integer executeThreadIdleCount,
			Integer executeThreadTotalCount, Integer standbyThreadCount,
			Integer pendingUserRequestCount, Integer completedRequestCount,
			String throughput, Date time,String times) {
		this.id = id;
		this.ip = ip;
		this.port = port;
		this.serverName = serverName;
		this.executeThreadBusyCount = executeThreadBusyCount;
		this.hoggingThreadCount = hoggingThreadCount;
		this.executeThreadIdleCount = executeThreadIdleCount;
		this.executeThreadTotalCount = executeThreadTotalCount;
		this.standbyThreadCount = standbyThreadCount;
		this.pendingUserRequestCount = pendingUserRequestCount;
		this.completedRequestCount = completedRequestCount;
		this.throughput = throughput;
		this.time = time;
		this.times=times;
	}

	public String getHealthStatus() {
		return healthStatus;
	}

	public void setHealthStatus(String healthStatus) {
		this.healthStatus = healthStatus;
	}

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	public int getPort() {
		return this.port;
	}

	public void setPort(int port) {
		this.port = port;
	}

	public String getServerName() {
		return this.serverName;
	}

	public void setServerName(String serverName) {
		this.serverName = serverName;
	}

	public Integer getExecuteThreadBusyCount() {
		return this.executeThreadBusyCount;
	}

	public void setExecuteThreadBusyCount(Integer executeThreadBusyCount) {
		this.executeThreadBusyCount = executeThreadBusyCount;
	}

	public Integer getHoggingThreadCount() {
		return this.hoggingThreadCount;
	}

	public void setHoggingThreadCount(Integer hoggingThreadCount) {
		this.hoggingThreadCount = hoggingThreadCount;
	}

	public Integer getExecuteThreadTotalCount() {
		return this.executeThreadTotalCount;
	}

	public void setExecuteThreadTotalCount(Integer executeThreadTotalCount) {
		this.executeThreadTotalCount = executeThreadTotalCount;
	}

	public Integer getStandbyThreadCount() {
		return this.standbyThreadCount;
	}

	public void setStandbyThreadCount(Integer standbyThreadCount) {
		this.standbyThreadCount = standbyThreadCount;
	}

	public Integer getPendingUserRequestCount() {
		return this.pendingUserRequestCount;
	}

	public void setPendingUserRequestCount(Integer pendingUserRequestCount) {
		this.pendingUserRequestCount = pendingUserRequestCount;
	}

	public Integer getCompletedRequestCount() {
		return this.completedRequestCount;
	}

	public void setCompletedRequestCount(Integer completedRequestCount) {
		this.completedRequestCount = completedRequestCount;
	}

	public String getThroughput() {
		return this.throughput;
	}

	public void setThroughput(String throughput) {
		this.throughput = throughput;
	}

	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}
	

	public Integer getExecuteThreadIdleCount() {
		return executeThreadIdleCount;
	}

	public void setExecuteThreadIdleCount(Integer executeThreadIdleCount) {
		this.executeThreadIdleCount = executeThreadIdleCount;
	}

	@Override
	public String toString() {
		return "ServerStatus [id=" + id + ", ip=" + ip + ", port=" + port + ", serverName=" + serverName
				+ ", executeThreadBusyCount=" + executeThreadBusyCount + ", hoggingThreadCount=" + hoggingThreadCount
				+ ", executeThreadIdleCount=" + executeThreadIdleCount + ", executeThreadTotalCount="
				+ executeThreadTotalCount + ", standbyThreadCount=" + standbyThreadCount + ", pendingUserRequestCount="
				+ pendingUserRequestCount + ", completedRequestCount=" + completedRequestCount + ", throughput="
				+ throughput + ", time=" + time + "]";
	}

}
